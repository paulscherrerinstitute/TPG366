# Mandatory macros:
# CONTROLLER  MaxGauge name
# SENSOR      Vaccum sensor name

# Optional Macros:
# WARN        Warn (MINOR) level, defaults to Inf (No warning)
# ALARM       Alarm (MAJOR) level, defaults to Inf (No alarm)
# MIN         Minimal range exponent, defaults to -11
# MAX         Maximal range exponent, defaults to 3
# PREC        Precision, defaults to -3 (3 digit exponential)

# Many records are set by either $(CONTROLLER):READ-STATUS or $(CONTROLLER):READ-INFOS

record (stringout, "$(CONTROLLER):DEBUG")
{
    field (DESC, "Generic command record")
    field (DTYP, "stream")
    field (PRIO, "HIGH")
    field (OUT,  "@TPG366.proto debug(,$(ADDR=1)) $(PORT)")
    field (ASG,  "$(ASG=)")
}

record (bi, "$(CONTROLLER):READ-STATUS")
{
# reads ONOFFG (SEN), STATUS and PRESSURE (PRX)  of all sensors
    field (DTYP, "stream")
    field (INP,  "@TPG366.proto read_status($(CONTROLLER),$(ADDR=1)) $(PORT)")
    field (PRIO, "MEDIUM")
    field (PINI, "YES")
    field (SCAN, "$(FASTSCAN=1 second)")
    field (ASG,  "READONLY")
}

record (bi, "$(CONTROLLER):READ-INFOS")
{
# reads GAUGE-TYPE (TID) and NAME (CID) of all sensors
    field (DTYP, "stream")
    field (INP,  "@TPG366.proto read_infos($(CONTROLLER),$(ADDR=1)) $(PORT)")
    field (PRIO, "LOW")
    field (SCAN, "$(SLOWSCAN=10 second)")
    field (PINI, "YES")
    field (ASG,  "READONLY")
}

record (calc, "$(CONTROLLER):PRESSURE$(CH)")
{
    alias ("$(SENSOR):PRESSURE")
    field (INPB, "$(CONTROLLER):STATUS$(CH) CP MS")
    field (CALC, "A")
    field (EGU,  "mbar")
    field (PREC, "$(PREC=-4)")
    field (LOPR, "1e$(MIN=-11)")
    field (HOPR, "1e$(MAX=3)")
    field (HIGH, "$(WARN=Inf)")
    field (HSV,  "MINOR")
    field (HIHI, "$(ALARM=Inf)")
    field (HHSV, "MAJOR")
    field (ASG,  "READONLY")
}

record (calcout, "$(CONTROLLER):DISCONNECTED$(CH)")
{
    field (INPA, "$(CONTROLLER):READ-STATUS.STAT CP")
    field (CALC, "A!=0")
    field (OOPT, "When Non-zero")
    field (DOPT, "Use OCAL")
    field (OCAL, "7")
    field (OUT,  "$(SENSOR):STATUS PP")
    field (ASG,  "READONLY")
}

record (mbbi, "$(CONTROLLER):STATUS$(CH)")
{
    alias ("$(SENSOR):STATUS")
    field (ZRST, "OK")
    field (ONST, "UNDERRANGE")
    field (TWST, "OVERRANGE")    field (TWSV, "MINOR")
    field (THST, "SENSOR ERROR") field (THSV, "INVALID")
    field (FRST, "SENSOR OFF")   field (FRSV, "INVALID")
    field (FVST, "NO SENSOR")    field (FVSV, "INVALID")
    field (SXST, "ID ERROR")     field (SXSV, "INVALID")
    field (SVST, "I/O ERROR")    field (SVSV, "INVALID")
    field (ASG,  "READONLY")
}

record (mbbi, "$(CONTROLLER):ONOFFG$(CH)")
{
    alias ("$(SENSOR):ONOFFG")
    field (DTYP, "Raw Soft Channel")
    field (ZRVL, "1")  field (ZRST, "OFF")
    field (ONVL, "2")  field (ONST, "ON")
    field (TWVL, "0")  field (TWST, "not switchable")
    field (FLNK, "$(CONTROLLER):ONOFF$(CH)-UPDATER")
    field (ASG,  "READONLY")
}

record (calcout, "$(CONTROLLER):ONOFF$(CH)-UPDATER")
{
    field (INPA, "$(CONTROLLER):ONOFF$(CH)-UPDATER.B")
    field (INPB, "$(CONTROLLER):ONOFFG$(CH) MS CP")
    field (INPC, "$(CONTROLLER):ONOFF$(CH)")
    field (CALC, "B>1||(B#C&&A#B)")
    field (OOPT, "When Non-zero")
    field (DOPT, "Use OCAL")
    field (OCAL, "B>0")                       # not switchable is always on
    field (OUT,  "$(SENSOR):ONOFF PP")
    field (IVOA, "Don't drive outputs")
    field (ASG,  "READONLY")
}

record (bo, "$(CONTROLLER):ONOFF$(CH)")
{
    alias("$(SENSOR):ONOFF")
    field (ZNAM, "OFF")
    field (ONAM, "ON")
    field (DTYP, "stream")
    field (OUT,  "@TPG366.proto set_onoff$(CH)($(CONTROLLER),$(ADDR=1)) $(PORT)")
    field (PRIO, "HIGH")
    field (ASG,  "$(ASG=)")
    field (FLNK, "$(CONTROLLER):ONOFF$(CH)-BL")
    field (SDIS, "$(CONTROLLER):ONOFFG$(CH)") field (DISV, "2") # don't write if not switchable
}

record (calcout, "$(CONTROLLER):ONOFF$(CH)-BL")
{
    field (ODLY, "10")
    field (CALC, "0")
    field (ASG,  "READONLY")
}

record (stringin, "$(CONTROLLER):TYPE$(CH)")
{
    alias("$(SENSOR):GAUGE-TYPE")
    alias("$(CONTROLLER):SENSOR$(CH)-TYPE")
    field (DESC, "Gauge type")
    field (ASG,  "READONLY")
}

record (mbbo, "$(CONTROLLER):GAS$(CH)")
{
    alias("$(SENSOR):GAS")
    alias("$(SENSOR):GAS_SP")
    field (DESC, "Gas correction")
    field (ZRST, "Air/N2")
    field (ONST, "Ar")
    field (TWST, "H2")
    field (THST, "He")
    field (FRST, "Ne")
    field (FVST, "Kr")
    field (SXST, "Xe")
    field (SVST, "Other")
    field (ASG,  "$(ASG=)")
    field (FLNK, "$(CONTROLLER):SET-GAS")
}

record (bo, "$(CONTROLLER):SET-GAS")
{
    field (DTYP, "stream")
    field (OUT,  "@TPG366.proto set_gas($(CONTROLLER),$(ADDR=1)) $(PORT)")
    field (SDIS, "$(CONTROLLER):READ-INFOS.PACT")
    field (PRIO, "HIGH")
}

record (stringout, "$(CONTROLLER):NAME$(CH)")
{
    alias("$(SENSOR):NAME")
    alias("$(CONTROLLER):NAMEG$(CH)")
    field (DESC, "Sensor label")
    field (ASG,  "$(ASG=)")
    field (FLNK, "$(CONTROLLER):SET-NAMES")
}

record (bo, "$(CONTROLLER):SET-NAMES")
{
    field (DTYP, "stream")
    field (OUT,  "@TPG366.proto set_names($(CONTROLLER),$(ADDR=1)) $(PORT)")
    field (SDIS, "$(CONTROLLER):READ-INFOS.PACT")
    field (PRIO, "HIGH")
    field (ASG,  "READONLY")
}

record (stringin, "$(CONTROLLER):SENSOR$(CH)-NAME")
{
    field (DESC, "EPICS channel name")
    field (VAL,  "$(SENSOR)")
    field (PINI, "YES")
    field (DISP, "1")
    field (ASG,  "READONLY")
}
