ReplyTimeout = 200;
InTerminator = CR LF;
# No outTerminator because we need to send ENQ clean or RS485 will mess up the reply.

ADDR = ESC "0\$2";
handshake { in ACK; out ENQ; }

debug {
    out $ADDR "%s\r"; handshake;
    in "%#s";
}

set_mbar {
    out $ADDR "UNI,0\r"; handshake; in "0"; 
}

display_sendor_id {
    out $ADDR "DCB,0,12\r"; handshake; in "0,12";
}

save {
    out $ADDR "SAV,1\r"; handshake; in "0000";
}

read_onoff {
    out $ADDR "SEN\r"; handshake;
    in "%(\$1:ONOFFG1.RVAL)d,"
       "%(\$1:ONOFFG2.RVAL)d,"
       "%(\$1:ONOFFG3.RVAL)d,"
       "%(\$1:ONOFFG4.RVAL)d,"
       "%(\$1:ONOFFG5.RVAL)d,"
       "%(\$1:ONOFFG6.RVAL)d";
}

set_onoff1 {
    out $ADDR "SEN,%{1|2},0,0,0,0,0\r"; handshake;
    in "%*d,%*d,%*d,%*d,%*d,%*d";
}
set_onoff2 {
    out $ADDR "SEN,0,%{1|2},0,0,0,0\r"; handshake;
    in "%*d,%*d,%*d,%*d,%*d,%*d";
}
set_onoff3 {
    out $ADDR "SEN,0,0,%{1|2},0,0,0\r"; handshake;
    in "%*d,%*d,%*d,%*d,%*d,%*d";
}
set_onoff4 {
    out $ADDR "SEN,0,0,0,%{1|2},0,0\r"; handshake;
    in "%*d,%*d,%*d,%*d,%*d,%*d";
}
set_onoff5 {
    out $ADDR "SEN,0,0,0,0,%{1|2},0\r"; handshake;
    in "%*d,%*d,%*d,%*d,%*d,%*d";
}
set_onoff6 {
    out $ADDR "SEN,0,0,0,0,0,%{1|2}\r"; handshake;
    in "%*d,%*d,%*d,%*d,%*d,%*d";
}

read_pressure_and_status {
    out $ADDR "PRX\r"; handshake;
    in "%(\$1:STATUS1)d,%(\$1:PRESSURE1.A)f,"
       "%(\$1:STATUS2)d,%(\$1:PRESSURE2.A)f,"
       "%(\$1:STATUS3)d,%(\$1:PRESSURE3.A)f,"
       "%(\$1:STATUS4)d,%(\$1:PRESSURE4.A)f,"
       "%(\$1:STATUS5)d,%(\$1:PRESSURE5.A)f,"
       "%(\$1:STATUS6)d,%(\$1:PRESSURE6.A)f";
}

read_gauge_type {
    out $ADDR "TID\r"; handshake;
    in "%(\$1:TYPE1)[^,],"
       "%(\$1:TYPE2)[^,],"
       "%(\$1:TYPE3)[^,],"
       "%(\$1:TYPE4)[^,],"
       "%(\$1:TYPE5)[^,],"
       "%(\$1:TYPE6)[^,]";
}

read_names {
    out $ADDR "CID\r"; handshake;
    in "%#/_+(?=,|$)//"  # remove all trailing _ from the names
       "%#/_/ /"         # replace _ with space
       "%(\$1:NAME1)[^,],"
       "%(\$1:NAME2)[^,],"
       "%(\$1:NAME3)[^,],"
       "%(\$1:NAME4)[^,],"
       "%(\$1:NAME5)[^,],"
       "%(\$1:NAME6)[^,]";
}

set_names {
    out $ADDR "CID,%(\$1:NAME1).8s,"
            "%(\$1:NAME2).8s,"
            "%(\$1:NAME3).8s,"
            "%(\$1:NAME4).8s,"
            "%(\$1:NAME5).8s,"
            "%(\$1:NAME6).8s\r"
        "%#/ /_/"        # replace space chars with _ 
        "%#/.*/\U0/";    # convert to upper case
    handshake;
    in "%#/_+(?=,|$)//"  # remove all trailing _ from the names
       "%#/_/ /"         # replace _ with space
       "%(\$1:NAME1)[^,],"
       "%(\$1:NAME2)[^,],"
       "%(\$1:NAME3)[^,],"
       "%(\$1:NAME4)[^,],"
       "%(\$1:NAME5)[^,],"
       "%(\$1:NAME6)[^,]";
    save;
}

read_gas {
    out $ADDR "GAS\r"; handshake;
    in "%(\$1:GAS1)d,"
       "%(\$1:GAS2)d,"
       "%(\$1:GAS3)d,"
       "%(\$1:GAS4)d,"
       "%(\$1:GAS5)d,"
       "%(\$1:GAS6)d";
}

set_gas {
    out $ADDR "GAS,%(\$1:GAS1)d,"
            "%(\$1:GAS2)d,"
            "%(\$1:GAS3)d,"
            "%(\$1:GAS4)d,"
            "%(\$1:GAS5)d,"
            "%(\$1:GAS6)d\r";
    handshake;
    in "%(\$1:GAS1)d,"
       "%(\$1:GAS2)d,"
       "%(\$1:GAS3)d,"
       "%(\$1:GAS4)d,"
       "%(\$1:GAS5)d,"
       "%(\$1:GAS6)d";
}

read_status {
    set_mbar;
    read_onoff;
    read_pressure_and_status;
}

read_infos {
    @init {
        read_gauge_type;
        read_names;
        read_gas;
        display_sendor_id;
    }
    read_gauge_type;
    read_names;
    read_gas;
}

read_relay_status {
    out $ADDR "SPS\r"; handshake;
    in "%(\$1:RELAY1){0|1},"
       "%(\$1:RELAY2){0|1},"
       "%(\$1:RELAY3){0|1},"
       "%(\$1:RELAY4){0|1},"
       "%(\$1:RELAY5){0|1},"
       "%(\$1:RELAY6){0|1}";
}

get_relay_setpoint {
    out $ADDR "SP\$3\r"; handshake;
    in "%(\$1:RELAY\$3-SOURCE)d,%(\$1:RELAY\$3-LOW)E,%(\$1:RELAY\$3-HIGH)E";
}

set_relay_setpoint {
    @init {
        out $ADDR "\r"; in "%*#s";
        get_relay_setpoint;
    }
    out $ADDR "SP\$3,%(\$1:RELAY\$3-SOURCE)d,%(\$1:RELAY\$3-LOW).4E,%(\$1:RELAY\$3-HIGH).4E\r";
    handshake;
    in "%*d,%*E,%*E";
    save;
}
